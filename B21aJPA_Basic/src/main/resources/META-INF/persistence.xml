<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="https://jakarta.ee/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence 
                        https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd"
    version="3.0"> 
    <!--  
	Java VM에 생성되는 영속성(Persistance) 개체의 이름을 MyJPA로 설정. 
	-->
	<persistence-unit name="MyJPA" transaction-type="RESOURCE_LOCAL">
		<!-- 엔티티로 사용할 클래스의 풀 경로 -->
		<!-- <class>myjpa1.Member1</class> -->
		<!-- <class>myjpa2.Member2</class> -->
		<!-- <class>myjpa3.Member3</class> -->
		<class>myjpa4.Member4</class>
		
		<!-- 명시적으로 나열된 클래스들만 엔티티로 인식 -->
		<exclude-unlisted-classes>true</exclude-unlisted-classes>
		
		<properties>
			<!-- 필수 : 데이터베이스 접속 정보 -->
			<property name="jakarta.persistence.jdbc.driver" value="oracle.jdbc.OracleDriver"/>
			<property name="jakarta.persistence.jdbc.url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
			<property name="jakarta.persistence.jdbc.user" value="musthave"/>
			<property name="jakarta.persistence.jdbc.password" value="1234"/>
			
			<!--  
            SQL방언(dialect) : 하이버네이트가 특정 데이터베이스에 맞는 SQL을 생성하도록 설정. 
            	여기서는 오라클에서 사용할 수 있는 쿼리문을 생성한다. 
            --> 
            <property name="hibernate.dialect" value="org.hibernate.dialect.OracleDialect"/>
            
            <!-- 옵션 -->
            <!-- Hibernate가 실행하는 모든 SQL 쿼리를 콘솔이나 로그에 출력 권장은 false -->
            <property name="hibernate.show_sql" value="true"/>
            <!-- 출력되는 SQL 쿼리를 가독성 좋게 포맷팅하여 보여준다. -->
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.id.new_generator_mapping" value="true"/>
            
             <!-- 
            사용할 수 있는 옵션 값
            create : 시작할때 기존 테이블 삭제 후 다시 생성 DROP + CREATE
            create-drop : create와 같지만 종료시점에 테이블 DROP해서 삭제함. 
            update : 변경분만 반영됨. 단, 추가만 되고 지워지는건 안됨.
            validate : 엔티티와 테이블이 정상 매핑되었는지만 확인.
			none : 아무 작업도 하지 않음.
          	
          	실무에서는 오라클에 테이블과 시퀀스를 SQL문을 이용하여 만들어두고 none으로 설정하는것이
            좋다. 
            -->  
            <!-- <property name="hibernate.hbm2ddl.auto" value="create"/> -->
            <property name="hibernate.hbm2ddl.auto" value="none"/>
		</properties>
	</persistence-unit>
</persistence>